{"version":3,"file":"static/js/458.3b1693ca.chunk.js","mappings":"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","sources":["components/Styled/BgWrapper.styled.jsx","components/Styled/Section.styled.jsx","helpers/validationSchema.js","components/UserMenu/UserMenu.styled.jsx","components/UserMenu/UserMenu.jsx","pages/Contacts/Contacts.styled.jsx","components/ContactsListItem/ContactsListItem.styled.jsx","redux/contacts/selectors.js","components/ContactsListItem/ContactsListItem.jsx","components/ContactsList/ContactsList.styled.jsx","components/Error/Error.styled.jsx","redux/filter/selectors.js","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactsForm/ContactsForm.styled.jsx","components/ContactsForm/ContactsForm.jsx","components/AddContactModal/AddContactModal.styled.jsx","components/AddContactModal/AddContactModal.jsx","components/ContactsListWrapper/ContactsListWrapper.styled.jsx","components/ContactsListWrapper/ContactsListWrapper.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport LoginBgImage from 'img/login-bg-img.jpg';\nimport LoginBgImage2x from 'img/login-bg-img@2x.jpg';\nimport ContactsBgImage from 'img/contacts-bg-img.jpg';\nimport ContactsBgImage2x from 'img/contacts-bg-img@2x.jpg';\n\nexport const LoginBgWrapper = styled.div`\n  min-width: 320px;\n  height: 100%;\n  background: linear-gradient(\n      0deg,\n      rgba(0, 0, 0, 0.2) 0%,\n      rgba(0, 0, 0, 0.2) 100%\n    ),\n    url(${LoginBgImage});\n\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n\n  filter: blur(1.5px);\n\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background: linear-gradient(\n        0deg,\n        rgba(0, 0, 0, 0.2) 0%,\n        rgba(0, 0, 0, 0.2) 100%\n      ),\n      url(${LoginBgImage2x});\n    background-size: cover;\n    background-position: center;\n  }\n`;\n\nexport const ContactsBgWrapper = styled.div`\n  min-width: 320px;\n  height: 100%;\n  background: linear-gradient(\n      0deg,\n      rgba(0, 0, 0, 0.2) 0%,\n      rgba(0, 0, 0, 0.2) 100%\n    ),\n    url(${ContactsBgImage});\n\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: top right;\n\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background: linear-gradient(\n        0deg,\n        rgba(0, 0, 0, 0.2) 0%,\n        rgba(0, 0, 0, 0.2) 100%\n      ),\n      url(${ContactsBgImage2x});\n    background-size: cover;\n\n    background-position: top right;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  position: relative;\n  height: calc(100vh - 96px);\n`;\n","import * as yup from 'yup';\nimport 'yup-phone-lite';\n\nexport const contactsValidationSchema = yup.object({\n  name: yup.string().min(2).max(32).required('This field is required'),\n  number: yup\n    .string()\n    .phone(null, `Please enter a valid phone number`)\n    .required('This field is required'),\n});\n\n// Please enter a valid phone number in an international format. Example: +380 50-123-4567\n\nexport const registerValidationSchema = yup.object({\n  name: yup.string().min(2).max(32).required('This field is required'),\n  email: yup.string().email().required('This field is required'),\n  password: yup.string().min(7).max(32).required('This field is required'),\n});\n\nexport const loginValidationSchema = yup.object({\n  email: yup.string().email().required('This field is required'),\n  password: yup.string().min(7).max(32).required('This field is required'),\n});\n","import { colors, transition } from 'helpers/variables';\nimport styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  row-gap: 28px;\n  background-color: ${colors.transparentBgColor};\n  border-radius: 10px;\n  background: rgba(207, 207, 209, 0.8);\n  box-shadow: 0px 4px 11px 0px #000;\n  padding: 36px;\n`;\n\nexport const Username = styled.p`\n  font-weight: 500;\n  line-height: 1.22;\n  white-space: nowrap;\n`;\n\nexport const Email = styled.p`\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.22;\n  letter-spacing: 0.9px;\n`;\n\nexport const Button = styled.button`\n  border: none;\n  color: #fff;\n  border-radius: 10px;\n  padding: 6px 40px;\n  background: ${colors.mainAccentColor};\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.25);\n  font-size: 17px;\n  font-weight: 300;\n  line-height: 1.22;\n  cursor: pointer;\n  transition: transform ${transition};\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { Button, Email, Username, Wrapper } from './UserMenu.styled';\nimport { logOut } from 'redux/auth/operations';\nimport { useAuth } from 'redux/hooks/useAuth';\n\nexport const UserMenu = () => {\n  const dispatch = useDispatch();\n  const { user } = useAuth();\n\n  return (\n    <Wrapper>\n      <Username>Welcome, {user.name}</Username>\n      <Email>{user.email}</Email>\n\n      <Button type=\"button\" onClick={() => dispatch(logOut())}>\n        Logout\n      </Button>\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactsContainer = styled.div`\n  position: absolute;\n  top: 64px;\n  left: 50%;\n  transform: translateX(-50%);\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n  min-width: 320px;\n  max-width: 414px;\n  width: 100%;\n  height: calc(100% - (64px * 2));\n  min-height: 480px;\n  max-height: 1024px;\n\n  display: flex;\n  justify-content: space-around;\n  /* column-gap: 19%; */\n  align-items: flex-start;\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n  }\n  @media screen and (min-width: 1024px) {\n    max-width: 920px;\n  }\n  @media screen and (min-width: 1440px) {\n    max-width: 1200px;\n  }\n`;\n","import { colors, transition } from 'helpers/variables';\nimport styled from 'styled-components';\n\nexport const Item = styled.li`\n  position: relative;\n  /* display: flex;\n  align-items: center;\n  gap: 8px; */\n  width: 100%;\n  padding: 16px 20px;\n  border-radius: 10px;\n  border: 1px solid rgba(117, 117, 117, 0.8);\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.25);\n`;\n\nexport const Name = styled.p`\n  font-size: 20px;\n  font-weight: 300;\n  line-height: 1.22;\n`;\n\nexport const Number = styled.p`\n  font-size: 16px;\n  line-height: 1.22;\n  letter-spacing: 0.96px;\n  margin-left: 14px;\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 29px;\n  right: 20px;\n  display: flex;\n  align-items: center;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  color: ${colors.placeholderColor};\n  transition: color ${transition};\n\n  &:hover,\n  &:focus {\n    color: ${colors.mainAccentColor};\n  }\n`;\n","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Button, Item, Name, Number } from './ContactsListItem.styled';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { DeleteBtnLoader } from 'components/Loader/Loader';\nimport { useState } from 'react';\nimport { IoTrashOutline } from 'react-icons/io5';\n\nexport const ContactsListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const [deletingContactId, setDeletingContactId] = useState(null);\n\n  return (\n    <Item>\n      <Name>{name}</Name>\n      <Number>{number}</Number>\n      <Button\n        onClick={() => {\n          setDeletingContactId(id);\n          dispatch(deleteContact(id)).then(() => setDeletingContactId(null));\n        }}\n        // disabled={isLoading}\n      >\n        {deletingContactId === id && isLoading ? (\n          <DeleteBtnLoader size={20} />\n        ) : (\n          <IoTrashOutline size={20} color=\"currentColor\" />\n        )}\n      </Button>\n    </Item>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  margin-bottom: 2px;\n  height: calc(100% - (130px));\n  overflow-x: auto;\n`;\n","import styled from 'styled-components';\n\nexport const ErrorMessage = styled.p`\n  color: red;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectFilter, selectContacts],\n  (filter, contacts) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts?.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { ContactsListItem } from 'components/ContactsListItem/ContactsListItem';\nimport { selectError } from 'redux/contacts/selectors';\nimport { List } from './ContactsList.styled';\nimport { ErrorMessage } from 'components/Error/Error.styled';\nimport { selectVisibleContacts } from 'redux/filter/selectors';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  if (error) {\n    <ErrorMessage>{error} </ErrorMessage>;\n  }\n\n  return (\n    <List>\n      {visibleContacts.map(({ id, name, number }) => (\n        <ContactsListItem key={id} id={id} name={name} number={number} />\n      ))}\n    </List>\n  );\n};\n","import { colors } from 'helpers/variables';\nimport styled from 'styled-components';\n\nexport const Input = styled.input`\n  background-color: transparent;\n  border-radius: 10px;\n  border: 1px solid #000;\n  font-size: 18px;\n  padding: 6px 40px;\n  padding-left: 44px;\n  width: 380px;\n\n  &:focus {\n    outline: 1.5px solid ${colors.mainAccentColor};\n  }\n\n  &::placeholder {\n    font-size: 16px;\n    color: ${colors.placeholderColor};\n    font-weight: 300;\n    line-height: 1.22;\n  }\n`;\n\nexport const InputWrapper = styled.div`\n  position: relative;\n  margin-bottom: 28px;\n`;\n\nexport const ClearBtn = styled.button`\n  padding: 0;\n  background-color: transparent;\n  border: none;\n  position: absolute;\n  top: 9.5px;\n  right: 16px;\n  cursor: pointer;\n`;\n","import { IoSearchSharp, IoClose } from 'react-icons/io5';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/filter/selectors';\nimport { setFilter } from 'redux/filter/slice';\nimport { ClearBtn, Input, InputWrapper } from './Filter.styled';\nimport { colors } from 'helpers/variables';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const onFilterChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <InputWrapper>\n      <Input\n        type=\"text\"\n        value={filter}\n        onChange={onFilterChange}\n        placeholder=\"Search\"\n      />\n      <IoSearchSharp\n        color={colors.placeholderColor}\n        size={24}\n        style={{ position: 'absolute', top: '9.5px', left: '16px' }}\n      />\n      <ClearBtn onClick={() => dispatch(setFilter(''))}>\n        <IoClose color={colors.placeholderColor} size={24} />\n      </ClearBtn>\n    </InputWrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { Form as FormikForm, Field as FormikField } from 'formik';\nimport { colors, transition } from 'helpers/variables';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  row-gap: 52px;\n  width: 100%;\n`;\n\nexport const AllInputsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  gap: 36px;\n`;\n\nexport const InputWrapper = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nexport const Label = styled.label`\n  font-size: 17px;\n\n  font-weight: 200;\n  line-height: 1.22;\n`;\n\nexport const Field = styled(FormikField)`\n  border-radius: 10px;\n  border: 1px solid #000;\n  background-color: transparent;\n  padding: 8px 20px;\n  font-size: 16px;\n\n  &:focus {\n    outline: 1.5px solid ${colors.mainAccentColor};\n  }\n\n  &::placeholder {\n    color: ${colors.placeholderColor};\n\n    font-weight: 300;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 0;\n  border: none;\n  color: #fff;\n  border-radius: 10px;\n  background: ${colors.mainAccentColor};\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.25);\n  padding: 6px 40px;\n  font-size: 18px;\n  cursor: pointer;\n  transition: transform ${transition};\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n\nexport const StyledErrorMessage = styled.p`\n  position: absolute;\n  bottom: -24px;\n  left: 20px;\n  color: #b40101;\n  font-size: 16px;\n  font-weight: 300;\n  line-height: 1.22;\n`;\n","import { contactsValidationSchema } from 'helpers/validationSchema';\nimport {\n  AllInputsWrapper,\n  Button,\n  Field,\n  Form,\n  InputWrapper,\n  Label,\n  StyledErrorMessage,\n} from './ContactsForm.styled';\nimport { ErrorMessage, Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport const ContactsForm = ({ closeModal }) => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const onSubmit = (values, action) => {\n    const isInContacts = contacts.some(\n      ({ name }) => name.toLowerCase() === values.name.toLowerCase()\n    );\n\n    if (isInContacts) {\n      return alert(`${values.name} is already in contacts`);\n    }\n\n    dispatch(addContact(values));\n    closeModal();\n\n    action.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      validationSchema={contactsValidationSchema}\n      onSubmit={onSubmit}\n    >\n      <Form>\n        <AllInputsWrapper>\n          <InputWrapper>\n            <Label>Name</Label>\n            <Field type=\"text\" name=\"name\" placeholder=\"Anna\" />\n            <ErrorMessage\n              name=\"name\"\n              render={message => (\n                <StyledErrorMessage>{message}</StyledErrorMessage>\n              )}\n            />\n          </InputWrapper>\n          <InputWrapper>\n            <Label>Number</Label>\n            <Field type=\"tel\" name=\"number\" placeholder=\"+380\" />\n            <ErrorMessage\n              name=\"number\"\n              render={message => (\n                <StyledErrorMessage>{message}</StyledErrorMessage>\n              )}\n            />\n          </InputWrapper>\n        </AllInputsWrapper>\n\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.p`\n  font-weight: 500;\n  line-height: 1.22;\n  text-transform: uppercase;\n`;\n","import { ContactsForm } from 'components/ContactsForm/ContactsForm';\nimport Modal from 'react-modal';\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\nimport { Title } from './AddContactModal.styled';\n\nconst customStyles = {\n  overlay: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    width: '100vw',\n    height: '100vh',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    zIndex: 999,\n  },\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    borderRadius: '10px',\n    backgroundColor: '#CFCFD1',\n    boxShadow: '0px 4px 11px 0px #000',\n    padding: '44px',\n    display: 'flex',\n    flexDirection: 'column',\n    rowGap: '32px',\n  },\n};\n\nModal.setAppElement('#modal-root');\n\nexport const AddContactModal = ({ modalIsOpen, closeModal }) => {\n  return (\n    <Modal\n      isOpen={modalIsOpen}\n      onRequestClose={closeModal}\n      style={customStyles}\n      contentLabel=\"Modal to add new contact\"\n      onAfterOpen={() => disableBodyScroll(document)}\n      onAfterClose={() => enableBodyScroll(document)}\n    >\n      <Title>Create a new contact</Title>\n      <ContactsForm closeModal={closeModal} />\n    </Modal>\n  );\n};\n\n// Make sure to bind modal to your appElement (https://reactcommunity.org/react-modal/accessibility/)\n","import { colors, transition } from 'helpers/variables';\nimport styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 52px;\n  border-radius: 10px;\n  background: ${colors.transparentBgColor};\n  box-shadow: 0px 4px 11px 0px #000;\n  height: 100%;\n`;\n\nexport const ListTitle = styled.p`\n  font-weight: 500;\n  line-height: 1.22;\n  margin-bottom: 30px;\n`;\n\nexport const AddContactBtn = styled.button`\n  position: absolute;\n  bottom: 24px;\n  right: 24px;\n  padding: 0;\n  border: none;\n  background-color: transparent;\n  color: ${colors.placeholderColor};\n  cursor: pointer;\n  transition: color ${transition};\n\n  &:hover,\n  &:focus {\n    color: ${colors.mainAccentColor};\n  }\n`;\n","import { IoPersonAddSharp } from 'react-icons/io5';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\n\nimport { Filter } from 'components/Filter/Filter';\nimport { useState } from 'react';\nimport { AddContactModal } from 'components/AddContactModal/AddContactModal';\nimport {\n  AddContactBtn,\n  ListTitle,\n  Wrapper,\n} from './ContactsListWrapper.styled';\n\nexport const ContactsListWrapper = () => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  const openModal = () => {\n    setModalIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setModalIsOpen(false);\n  };\n\n  return (\n    <Wrapper>\n      <ListTitle>Contacts</ListTitle>\n      <Filter />\n      <ContactsList />\n\n      <AddContactBtn onClick={openModal}>\n        <IoPersonAddSharp size={68} color=\"currentColor\" />\n      </AddContactBtn>\n\n      <AddContactModal modalIsOpen={modalIsOpen} closeModal={closeModal} />\n    </Wrapper>\n  );\n};\n","import { Section } from 'components/Styled/Section.styled';\nimport { ContactsBgWrapper } from 'components/Styled/BgWrapper.styled';\nimport { UserMenu } from 'components/UserMenu/UserMenu';\nimport { ContactsContainer } from './Contacts.styled';\nimport { ContactsListWrapper } from 'components/ContactsListWrapper/ContactsListWrapper';\n\nexport default function Contacts() {\n  return (\n    <main>\n      <Section>\n        <ContactsBgWrapper />\n\n        <ContactsContainer>\n          <UserMenu />\n          <ContactsListWrapper />\n        </ContactsContainer>\n      </Section>\n    </main>\n  );\n}\n"],"names":["LoginBgWrapper","styled","LoginBgImage","LoginBgImage2x","ContactsBgWrapper","ContactsBgImage","ContactsBgImage2x","Section","contactsValidationSchema","yup","name","min","max","required","number","phone","registerValidationSchema","email","password","loginValidationSchema","Wrapper","colors","Username","Email","Button","transition","UserMenu","dispatch","useDispatch","user","useAuth","type","onClick","logOut","ContactsContainer","Item","Name","Number","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","ContactsListItem","id","useSelector","useState","deletingContactId","setDeletingContactId","deleteContact","then","size","color","List","selectFilter","filter","selectVisibleContacts","createSelector","normalizedFilter","toLowerCase","contact","includes","ContactsList","visibleContacts","useEffect","fetchContacts","map","Input","InputWrapper","ClearBtn","Filter","value","onChange","e","setFilter","target","placeholder","style","position","top","left","Form","FormikForm","AllInputsWrapper","Label","Field","FormikField","StyledErrorMessage","ContactsForm","closeModal","initialValues","validationSchema","onSubmit","values","action","some","alert","addContact","resetForm","render","message","Title","customStyles","overlay","width","height","display","justifyContent","alignItems","backgroundColor","zIndex","content","right","bottom","marginRight","transform","borderRadius","boxShadow","padding","flexDirection","rowGap","Modal","AddContactModal","modalIsOpen","isOpen","onRequestClose","contentLabel","onAfterOpen","disableBodyScroll","document","onAfterClose","enableBodyScroll","ListTitle","AddContactBtn","ContactsListWrapper","setModalIsOpen","Contacts"],"sourceRoot":""}